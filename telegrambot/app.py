import asyncio
from aiogram import Bot, Dispatcher, executor, types
import random
from aiogram.types import Message

API_TOKEN = '5681968815:AAFWpak4Esu4TcP-3o1myte_UmtlvCLwPWc'

# Configure logging
import logging

logging.basicConfig(level=logging.INFO)

# Initialize bot and dispatcher
bot = Bot(API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def cmd_start(message: types.Message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    markup.add(btn1)
    await bot.send_message(
        message.from_user.id, 
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–µ—Ä–≤—ã–π –±–æ—Ç-–∏–≥—Ä–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ü–æ–ª–µ–∂–∞–µ–≤–∞!", 
        reply_markup=markup
    )
    await bot.send_message(
        message.from_user.id, 
        "üç¨–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ '–ö–æ–Ω—Ñ–µ—Ç–Ω—É—é –∏–≥—Ä—É'!üç¨", 
        reply_markup=markup
    )

@dp.message_handler(content_types=['text'])
async def get_text_messages(message: types.Message):
    if message.text == 'üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True) 
        btn1 = types.KeyboardButton('üë®2 –∏–≥—Ä–æ–∫–∞ –Ω–∞ –æ–¥–Ω–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–µüë®')
        btn2 = types.KeyboardButton('–ü—Ä–æ—Ç–∏–≤ –ò–ò')
        btn3 = types.KeyboardButton('‚ùì–ò–Ω—Ñ–æ‚ùì')
        markup.add(btn1, btn2, btn3)
        await bot.send_message(
            message.from_user.id, 
            '‚ùì –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏–≥—Ä—ã ‚ùì', 
            reply_markup=markup
        )

    elif message.text == 'üë®2 –∏–≥—Ä–æ–∫–∞ –Ω–∞ –æ–¥–Ω–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–µüë®':
        await bot.send_message(
            message.from_user.id, 
            "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ..",
            parse_mode='Markdown'
        )
    elif message.text == '–ü—Ä–æ—Ç–∏–≤ –ò–ò':
        await bot.send_message(
            message.from_user.id, 
            "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ..",
            parse_mode='Markdown'
    
    elif message.text == '‚ùì–ò–Ω—Ñ–æ‚ùì':
        await bot.send_message(
            message.from_user.id, 
            "üéÆ –ù–∞ —Å—Ç–æ–ª–µ –ª–µ–∂–∏—Ç –∑–∞–¥–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç. –ò–≥—Ä–∞—é—Ç –¥–≤–∞ –∏–≥—Ä–æ–∫–∞ –¥–µ–ª–∞—è —Ö–æ–¥ –¥—Ä—É–≥ –ø–æ—Å–ª–µ –¥—Ä—É–≥–∞. –ü–µ—Ä–≤—ã–π —Ö–æ–¥ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∂–µ—Ä–µ–±—å—ë–≤–∫–æ–π. –ó–∞ –æ–¥–∏–Ω —Ö–æ–¥ –º–æ–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ —á–µ–º 28 –∫–æ–Ω—Ñ–µ—Ç. –í—Å–µ –∫–æ–Ω—Ñ–µ—Ç—ã –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞ –¥–æ—Å—Ç–∞—é—Ç—Å—è —Å–¥–µ–ª–∞–≤—à–µ–º—É –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ö–æ–¥. üéÆ",
            parse_mode='Markdown'
        )

executor.start_polling(dp, skip_updates=True)